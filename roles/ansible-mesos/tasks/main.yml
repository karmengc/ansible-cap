---

- name: Stop Spark Standalone
  shell: |
    {{ spark_install_dir }}/spark-{{ spark_version }}/sbin/stop-all.sh
  become: yes
  become_user: "{{ spark_user }}"

- name: Add Mesosphere repo
  shell: |
    rpm -Uvh http://repos.mesosphere.io/el/7/noarch/RPMS/mesosphere-el-repo-7-1.noarch.rpm
  ignore_errors: true

- name: Install Mesos packages
  yum:
    name:
      - mesos
      - mesosphere-zookeeper
      - autoconf
      - libtool
        #- build-essential en centos gcc gcc-c++ make 
      - gcc
      - gcc-c++
      - make
      - python-devel
      - python-six
      - python-virtualenv
        #- libcurl14-nss-dev
      - libcurl-devel
        #- libsasl2-devel
        #- libsasl2-modules
      - maven
        #- libapr1-devel
        #- libsvn-devel
    state: present

- name: Start Mesos service at master
  service:
    name: "mesos-master"
  when: ansible_hostname == "master"

- name: Start Mesos service at slave
  service:
    name: "mesos-slave"
  when: ansible_hostname == "worker"

- name: Start Mesos Zookeeper Service
  service:
    name: "zookeeper"

- name: Set Mesos Conf at Spark
  blockinfile:
    block: |
      export MESOS_NATIVE_JAVA_LIBRARY=/opt/mesos/build/src/.libs/libmesos.so
      export SPARK_EXECUTOR_URI=/tmp/spark-{{ spark_version }}.tgz
    dest: "{{ spark_install_dir }}/spark-{{ spark_version }}/conf/spark-env.sh"
    owner: "{{ spark_user }}"
    group: "{{ spark_user }}"
    insertafter: 'EOF'
    create: yes
    state: present

- include: test_app.yml
  when: ansible_hostname == "master" and mesos_test_app == true


# vim: ff=unix:ai:et:sw=2:ts=2:
